{"version":3,"sources":["logo.svg","components/card/card-component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monseer","id","name","email","CardList","map","monsmap","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","monster","fetch","then","response","json","users","this","filteredMonster","filter","monsters","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAAe,I,wBCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCFZC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACCD,EAAMI,QAAQK,KAAI,SAAAC,GAAO,OAAM,cAAC,EAAD,CAAuBN,QAASM,GAArBA,EAAQL,UCJ9CM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAW,SACXa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCHG,E,kDArCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXC,QAAS,GACTJ,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACK,QAASK,S,oBAOzC,WACE,MAAgCC,KAAKP,MAA9BC,EAAP,EAAOA,QAASJ,EAAhB,EAAgBA,YACVW,EAAkBP,EAAQQ,QAAQ,SAAAC,GAAQ,OAAIA,EAAS1B,KAAK2B,cAAcC,SAASf,EAAYc,kBAKrG,OACE,sBAAKhC,UAAU,MAAf,UACA,+CACA,cAAC,EAAD,CAAWW,YAAY,kBACvBC,aAAegB,KAAKhB,eACpB,cAAC,EAAD,CAAUT,QAAS0B,W,GAhCPK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.21f79cb8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt=\"monster\" src={`https://robohash.org/${props.monseer.id}?set=set2&size=180x180`}/>\n       <h2>{props.monseer.name}</h2>\n       <p>{props.monseer.email}</p>\n\n\n    </div>\n)","import React from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card-component';\n\n\nexport const CardList = (props) => {\n    return (\n        <div className='card-list'>\n        {props.monseer.map(monsmap => ( <Card key={monsmap.id} monseer={monsmap}/>\n        ))}\n        </div>\n    )}\n","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input \n        className ='search'\n        type='search' \n        placeholder={placeholder}\n        onChange={handleChange}\n      />\n)","import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list-component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      monster: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monster: users}));\n  }\n\n  handleChange = e => {\n    this.setState({searchField : e.target.value});\n  };\n\n  render() {\n    const {monster, searchField } = this.state;\n    const filteredMonster = monster.filter( monsters => monsters.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField\n\n    return (\n      <div className=\"App\">\n      <h1>Kota Monstrii</h1>\n      <SearchBox placeholder='search monsters'\n      handleChange ={this.handleChange} />\n      <CardList monseer={filteredMonster}/>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}